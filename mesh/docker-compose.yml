name: university-mesh

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.15
    platform: "linux/amd64"
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.system_call_filter=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  back-end-replicator:
    image: jinaga/jinaga-replicator:3.3.8
    container_name: back-end-replicator
    ports:
      - "8080:8080"
    volumes:
      - ./policies:/var/lib/replicator/policies:ro
      - ./authentication:/var/lib/replicator/authentication:ro
      - ./subscriptions:/var/lib/replicator/subscriptions:ro

  importer:
    build:
      context: ../src
      dockerfile: University.Importer/Dockerfile
    environment:
      - REPLICATOR_URL=http://back-end-replicator:8080/jinaga
      - ENVIRONMENT_PUBLIC_KEY=default-public-key
      - IMPORT_DATA_PATH=/data/import
      - PROCESSED_DATA_PATH=/data/processed
      - ERROR_DATA_PATH=/data/error
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - back-end-replicator
      - otel-collector
    volumes:
      - ./data/import:/data/import
      - ./data/processed:/data/processed
      - ./data/error:/data/error

  indexer:
    build:
      context: ../src
      dockerfile: University.Indexer/Dockerfile
    environment:
      - REPLICATOR_URL=http://back-end-replicator:8080/jinaga
      - ENVIRONMENT_PUBLIC_KEY=default-public-key
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - back-end-replicator
      - elasticsearch
      - otel-collector

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.120.0
    container_name: otel-collector
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "14250:14250" # Jaeger gRPC
      - "14268:14268" # Jaeger HTTP
      - "13133:13133" # Health check extension
      - "8889:8889" # Prometheus metrics
    volumes:
      - ./otel:/etc/otel:ro
    command: ["--config=/etc/otel/otel-collector-config.yml"]

  jaeger:
    image: jaegertracing/all-in-one:1.66.0
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI

  prometheus:
    image: prom/prometheus:v3.2.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  loki:
    image: grafana/loki:3.4.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./loki:/etc/loki:ro

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki

volumes:
  esdata:
  prometheus_data:
  loki_data:
  grafana_data:
